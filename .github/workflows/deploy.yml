name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    name: Pruebas Unitarias
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Instalar dependencias
        run: |
          cd backend
          pip install -r requirements.txt
          pip install httpx

      - name: Ejecutar Pruebas Unitarias
        run: |
          cd backend
          pytest tests/test_api.py tests/test_consumidores.py --junitxml=report_unit.xml
          
  integration-tests:
    name: Test BD y RabbitMQ
    runs-on: ubuntu-latest
    needs: unit-tests
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar dependencias
        run: |
          cd backend
          pip install -r requirements.txt
          
      - name: Esperar a que BD y RabbitMQ estén listos
        run: sleep 15  # Se aumentó a 15 segundos para más estabilidad

      - name: Crear tabla en PostgreSQL
        run: |
          docker exec postgres psql -U user -d testdb -c "
          CREATE TABLE IF NOT EXISTS ropa (
              id SERIAL PRIMARY KEY,
              tipo VARCHAR(50),
              color VARCHAR(50),
              talla VARCHAR(10),
              precio DECIMAL(10,2)
          );"
      
      - name: Insertar producto en BD
        run: |
          docker exec postgres psql -U user -d testdb -c "
          INSERT INTO ropa (tipo, color, talla, precio) VALUES ('Camiseta', 'Azul', 'M', 25.99);"

      - name: Consultar productos en BD
        run: |
          docker exec postgres psql -U user -d testdb -c "SELECT * FROM ropa;"

      - name: Ejecutar Pruebas de BD y RabbitMQ
        run: |
          cd backend
          pytest tests/test_database.py tests/test_rabbitmq.py --junitxml=report_integration.xml


  e2e-tests:
    name: Pruebas de Sistema (E2E)
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Construir y Levantar Servicios
        run: |
          docker-compose up -d --build

      - name: Esperar a que los servicios estén listos
        run: sleep 20  # Se aumentó el tiempo de espera

      - name: Ejecutar Pruebas E2E con Playwright
        run: |
          cd vue-app
          npm install
          npx playwright test --reporter=html

      - name: Desplegar en Servidor (Opcional)
        if: success()
        run: |
          echo "Desplegando en servidor..."